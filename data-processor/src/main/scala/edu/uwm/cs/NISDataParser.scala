package edu.uwm.cs

import org.apache.spark.sql.DataFrame
import org.apache.spark.sql.functions.{trim, substring, col}

class NISDataParser extends Serializable {

  /**
   * Parses data from raw text file according to the file specification.
   * <br>Element #94 'Total Charge' is the target and thus moved to the first column.
   * <br>See <a href = "https://www.hcup-us.ahrq.gov/db/nation/nis/tools/stats/FileSpecifications_NIS_2016_Core.TXT">
   *        2016 NIS File Specification</a> for format detail.
   * @param originalDF original DataFrame
   * @return parsed DataFrame
   */
  def parseData (originalDF: DataFrame): DataFrame = {
    originalDF.select(
      trim(substring(col("value"), 1, 3)).as("AGE"),
      trim(substring(col("value"), 4, 2)).as("AGE_NEONATE"),
      trim(substring(col("value"), 6, 2)).as("AMONTH"),
      trim(substring(col("value"), 8, 2)).as("AWEEKEND"),
      trim(substring(col("value"), 10, 2)).as("DIED"),
      trim(substring(col("value"), 12, 11)).as("DISCWT"),
      trim(substring(col("value"), 23, 2)).as("DISPUNIFORM"),
      trim(substring(col("value"), 25, 2)).as("DQTR"),
      trim(substring(col("value"), 27, 3)).as("DRG"),
      trim(substring(col("value"), 30, 2)).as("DRGVER"),
      trim(substring(col("value"), 32, 3)).as("DRG_NoPOA"),
      trim(substring(col("value"), 35, 2)).as("DXVER"),
      trim(substring(col("value"), 37, 2)).as("ELECTIVE"),
      trim(substring(col("value"), 39, 2)).as("FEMALE"),
      trim(substring(col("value"), 41, 3)).as("HCUP_ED"),
      trim(substring(col("value"), 44, 2)).as("HOSP_DIVISION"),
      trim(substring(col("value"), 46, 5)).as("HOSP_NIS"),
      trim(substring(col("value"), 51, 7)).as("I10_DX1"),
      trim(substring(col("value"), 58, 7)).as("I10_DX2"),
      trim(substring(col("value"), 65, 7)).as("I10_DX3"),
      trim(substring(col("value"), 72, 7)).as("I10_DX4"),
      trim(substring(col("value"), 79, 7)).as("I10_DX5"),
      trim(substring(col("value"), 86, 7)).as("I10_DX6"),
      trim(substring(col("value"), 93, 7)).as("I10_DX7"),
      trim(substring(col("value"), 100, 7)).as("I10_DX8"),
      trim(substring(col("value"), 107, 7)).as("I10_DX9"),
      trim(substring(col("value"), 114, 7)).as("I10_DX10"),
      trim(substring(col("value"), 121, 7)).as("I10_DX11"),
      trim(substring(col("value"), 128, 7)).as("I10_DX12"),
      trim(substring(col("value"), 135, 7)).as("I10_DX13"),
      trim(substring(col("value"), 142, 7)).as("I10_DX14"),
      trim(substring(col("value"), 149, 7)).as("I10_DX15"),
      trim(substring(col("value"), 156, 7)).as("I10_DX16"),
      trim(substring(col("value"), 163, 7)).as("I10_DX17"),
      trim(substring(col("value"), 170, 7)).as("I10_DX18"),
      trim(substring(col("value"), 177, 7)).as("I10_DX19"),
      trim(substring(col("value"), 184, 7)).as("I10_DX20"),
      trim(substring(col("value"), 191, 7)).as("I10_DX21"),
      trim(substring(col("value"), 198, 7)).as("I10_DX22"),
      trim(substring(col("value"), 205, 7)).as("I10_DX23"),
      trim(substring(col("value"), 212, 7)).as("I10_DX24"),
      trim(substring(col("value"), 219, 7)).as("I10_DX25"),
      trim(substring(col("value"), 226, 7)).as("I10_DX26"),
      trim(substring(col("value"), 233, 7)).as("I10_DX27"),
      trim(substring(col("value"), 240, 7)).as("I10_DX28"),
      trim(substring(col("value"), 247, 7)).as("I10_DX29"),
      trim(substring(col("value"), 254, 7)).as("I10_DX30"),
      trim(substring(col("value"), 261, 7)).as("I10_ECAUSE1"),
      trim(substring(col("value"), 268, 7)).as("I10_ECAUSE2"),
      trim(substring(col("value"), 275, 7)).as("I10_ECAUSE3"),
      trim(substring(col("value"), 282, 7)).as("I10_ECAUSE4"),
      trim(substring(col("value"), 289, 2)).as("I10_NDX"),
      trim(substring(col("value"), 291, 3)).as("I10_NECAUSE"),
      trim(substring(col("value"), 294, 2)).as("I10_NPR"),
      trim(substring(col("value"), 296, 7)).as("I10_PR1"),
      trim(substring(col("value"), 303, 7)).as("I10_PR2"),
      trim(substring(col("value"), 310, 7)).as("I10_PR3"),
      trim(substring(col("value"), 317, 7)).as("I10_PR4"),
      trim(substring(col("value"), 324, 7)).as("I10_PR5"),
      trim(substring(col("value"), 331, 7)).as("I10_PR6"),
      trim(substring(col("value"), 338, 7)).as("I10_PR7"),
      trim(substring(col("value"), 345, 7)).as("I10_PR8"),
      trim(substring(col("value"), 352, 7)).as("I10_PR9"),
      trim(substring(col("value"), 359, 7)).as("I10_PR10"),
      trim(substring(col("value"), 366, 7)).as("I10_PR11"),
      trim(substring(col("value"), 373, 7)).as("I10_PR12"),
      trim(substring(col("value"), 380, 7)).as("I10_PR13"),
      trim(substring(col("value"), 387, 7)).as("I10_PR14"),
      trim(substring(col("value"), 394, 7)).as("I10_PR15"),
      trim(substring(col("value"), 401, 10)).as("KEY_NIS"),
      trim(substring(col("value"), 411, 5)).as("LOS"),
      trim(substring(col("value"), 416, 2)).as("MDC"),
      trim(substring(col("value"), 418, 2)).as("MDC_NoPOA"),
      trim(substring(col("value"), 420, 4)).as("NIS_STRATUM"),
      trim(substring(col("value"), 424, 2)).as("PAY1"),
      trim(substring(col("value"), 426, 3)).as("PL_NCHS"),
      trim(substring(col("value"), 429, 3)).as("PRDAY1"),
      trim(substring(col("value"), 432, 3)).as("PRDAY2"),
      trim(substring(col("value"), 435, 3)).as("PRDAY3"),
      trim(substring(col("value"), 438, 3)).as("PRDAY4"),
      trim(substring(col("value"), 441, 3)).as("PRDAY5"),
      trim(substring(col("value"), 444, 3)).as("PRDAY6"),
      trim(substring(col("value"), 447, 3)).as("PRDAY7"),
      trim(substring(col("value"), 450, 3)).as("PRDAY8"),
      trim(substring(col("value"), 453, 3)).as("PRDAY9"),
      trim(substring(col("value"), 456, 3)).as("PRDAY10"),
      trim(substring(col("value"), 459, 3)).as("PRDAY11"),
      trim(substring(col("value"), 462, 3)).as("PRDAY12"),
      trim(substring(col("value"), 465, 3)).as("PRDAY13"),
      trim(substring(col("value"), 468, 3)).as("PRDAY14"),
      trim(substring(col("value"), 471, 3)).as("PRDAY15"),
      trim(substring(col("value"), 474, 2)).as("PRVER"),
      trim(substring(col("value"), 476, 2)).as("RACE"),
      trim(substring(col("value"), 478, 10)).as("TOTCHG"),
      trim(substring(col("value"), 488, 2)).as("TRAN_IN"),
      trim(substring(col("value"), 490, 2)).as("TRAN_OUT"),
      trim(substring(col("value"), 492, 4)).as("YEAR"),
      trim(substring(col("value"), 496, 2)).as("ZIPINC_QRTL")
    )
  }

}
